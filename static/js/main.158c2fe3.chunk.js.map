{"version":3,"sources":["constants/index.ts","reducers/optionsReducer.ts","reducers/toDoListReducer.ts","reducers/index.ts","components/Footer.tsx","components/Header/Header.tsx","actions/index.ts","components/Header/index.ts","constants/menu.ts","components/SideDrawer/ListItemLink.tsx","components/SideDrawer/SideDrawer.tsx","components/SideDrawer/index.ts","components/Calendar/Calendar.tsx","components/Calendar/index.ts","components/CalendarList/CalendarListItem.tsx","components/CalendarList/CalendarList.tsx","components/CalendarList/index.ts","views/CalendarView.tsx","utils/index.ts","components/AddItemForm/AddItemForm.tsx","components/AddItemForm/index.ts","components/FilterMenu/FilterMenuItem.tsx","components/FilterMenu/FilterMenu.tsx","components/FilterMenu/index.ts","components/Task/Task.tsx","components/Task/index.ts","components/TaskList/TaskList.tsx","components/TaskList/index.ts","views/HomeView.tsx","App.tsx","index.tsx"],"names":["ACTION_CONSTANTS","INIT_TASK_LIST","ADD_NEW_TASK","UPDATE_TASK_TEXT","TOGGLE_TASK_STATUS","REMOVE_TASK","LOAD_STORE","APPLY_FILTER","TOGGLE_DRAWER","UPDATE_TASK_DATE","defaultStore","filterType","isDrawerOpen","defaultToDo","reducers","combineReducers","toDoList","state","arguments","length","undefined","action","type","C","newId","uuid","Object","objectSpread","defineProperty","id","value","payload","taskName","isCompleted","hasDueDate","dueDate","toISOString","dateAdded","Date","newValue","options","store","createStore","Footer","react","className","this","props","classes","footer","Typography_default","a","variant","href","React","withStyles","theme","createStyles","position","background","bottom","textAlign","width","paddingBottom","spacing","unit","Header","handleDrawerToggle","_this","toggleDrawer","AppBar_default","appBar","Toolbar_default","IconButton_default","color","aria-label","onClick","menuButton","Menu_default","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","marginRight","withTheme","HeaderContainer","connect","dispatch","MAIN_MENU","name","icon","Home","link","CalendarToday","FILTER_MENU","label","ListItemLink","renderLink","itemProps","react_router_dom","assign","to","ListItem_default","button","component","ListItemIcon_default","ListItemText_default","primary","SideDrawer","_classNames","_classNames2","_this$props","Drawer_default","classNames","drawerOpen","drawerClose","paper","open","toolbar","Divider_default","List_default","map","menuItem","SideDrawer_ListItemLink","key","flexShrink","whiteSpace","enteringScreen","overflowX","breakpoints","up","display","alignItems","justifyContent","padding","mixins","SideDrawerContainer","localizer","BigCalendar","momentLocalizer","moment","ToDoCalendar","onNavigate","react_big_calendar_esm","events","eventsList","defaultDate","date","selectedDate","list","keys","forEach","push","title","start","end","allDay","resource","Calendar","CalendarListItem","secondary","CalendarList","tasksList","task","CalendarList_CalendarListItem","format","CalendarView","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","match","params","Paper_default","style","flex","Grid_default","container","height","item","md","components_Calendar","components_CalendarList","toDate","formatDate","concat","getFullYear","getMonth","toString","padStart","getDate","defualtState","newItemText","AddItemForm","checkForm","handleSubmit","addTaskItem","setState","handleTextUpdate","event","target","handleKeyPress","toggleDate","checked","handleDateChange","xs","root","TextField_default","onChange","onKeyPress","centerItem","FormControlLabel_default","control","Checkbox_default","labelPlacement","disabled","defaultValue","InputLabelProps","shrink","AddCircle_default","AddItemContainer","hasTaskDate","taskDate","FilterMenuItem","handleClick","MenuItem_default","FilterMenu","handleItemClick","handleMenuClose","applyFilter","handleOpenMenu","persist","anchorEl","currentTarget","showFilterMenu","_this2","aria-owns","aria-haspopup","index_es","core_Menu_default","onClose","transformOrigin","vertical","horizontal","FilterMenu_FilterMenuItem","FilterControlContainer","filterName","ToDoItem","onTextUpdate","newItem","toggleStatus","toggleTask","updateTask","isEditing","newDate","removeTask","toggleEdit","renderForm","TableRow_default","TableCell_default","colSpan","onKeyDown","sm","Save_default","renderItem","itemClass","Edit_default","Delete_default","TaskContainer","itemId","newText","Task","ToDoList","Table_default","TableHead_default","align","TableBody_default","index","components_Task","TaskListContainer","filter","initTaskList","TaskList","HomeView","handelAddButton","prevState","showAddNewItem","isFormVisible","filler","Button_default","rightIcon","formVisible","components_FilterMenu","Collapse_default","in","collapse","components_AddItemForm","components_TaskList","margin","transform","App","persistedState","localStorage","getItem","JSON","parse","loadStore","CssBaseline_default","components_Header","components_SideDrawer","content","react_router","exact","path","components_Footer","flexGrow","flexFlow","subscribe","setItem","stringify","getState","ReactDOM","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.158c2fe3.chunk.js","sourcesContent":["const ACTION_CONSTANTS = {\n  INIT_TASK_LIST: \"INIT_TASK_LIST\",\n  ADD_NEW_TASK: \"ADD_NEW_ITEM\",\n  UPDATE_TASK_TEXT: \"UPDATE_ADD_ITEM_TEXT\",\n  TOGGLE_TASK_STATUS: \"TOGGLE_ITEM\",\n  REMOVE_TASK: \"REMOVE_ITEM\",\n  LOAD_STORE: \"LOAD_STORE\",\n  APPLY_FILTER: \"APPLY_FILTER\",\n  TOGGLE_DRAWER: \"TOGGLE_DRAWER\",\n  UPDATE_TASK_DATE: \"UPDATE_TASK_DATE\"\n};\n\nexport default ACTION_CONSTANTS;\n\nexport const STYLE_CONSTANTS = {\n  drawerWidth: 240\n};\n","import C from \"../constants\";\nimport { IAction, IOptions } from \"../model/store\";\n\nexport const defaultStore: IOptions = {\n  filterType: \"all\",\n  isDrawerOpen: false\n};\n\nexport default function options(\n  state: IOptions = defaultStore,\n  action: IAction\n): IOptions {\n  switch (action.type) {\n    case C.APPLY_FILTER: {\n      return {\n        ...state,\n        filterType: action.payload\n      };\n    }\n    case C.TOGGLE_DRAWER: {\n      return {\n        ...state,\n        isDrawerOpen: !state.isDrawerOpen\n      };\n    }\n    default: {\n      return { ...state };\n    }\n  }\n}\n","import uuid from \"uuid\";\nimport C from \"../constants\";\nimport { IAction, ITodoList } from \"../model/store\";\n\nexport const defaultToDo: ITodoList = {};\n\nexport default function toDoList(\n  state: ITodoList = defaultToDo,\n  action: IAction\n): ITodoList {\n  switch (action.type) {\n    case C.ADD_NEW_TASK: {\n      const newId = uuid();\n      return {\n        ...state,\n        [newId]: {\n          id: newId,\n          value: action.payload.taskName,\n          isCompleted: false,\n          hasDueDate: action.payload.hasDueDate,\n          dueDate: action.payload.dueDate.toISOString(),\n          dateAdded: new Date().toISOString()\n        }\n      };\n    }\n    case C.REMOVE_TASK: {\n      if (state[action.payload]) {\n        delete state[action.payload];\n      }\n\n      return { ...state };\n    }\n    case C.TOGGLE_TASK_STATUS: {\n      state[action.payload].isCompleted = !state[action.payload].isCompleted;\n\n      return { ...state };\n    }\n    case C.UPDATE_TASK_TEXT: {\n      state[action.payload.id].value = action.payload.newValue;\n\n      return { ...state };\n    }\n    case C.LOAD_STORE: {\n      if (action.payload.toDoList) {\n        return { ...action.payload.toDoList };\n      }\n    }\n    // eslint-disable-next-line\n    case C.INIT_TASK_LIST: {\n      return { ...state };\n    }\n    default: {\n      return { ...state };\n    }\n  }\n}\n","import logger from \"redux-logger\";\n\nimport options from \"./optionsReducer\";\nimport toDoList from \"./toDoListReducer\";\n\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\n\nlet middleware = {};\n\nif (process.env.NODE_ENV !== \"production\") {\n  middleware = applyMiddleware(logger);\n}\n\nconst reducers = combineReducers({ toDoList, options });\n\nexport const store = createStore(reducers, middleware);\n","import * as React from \"react\";\n\nimport { createStyles, Theme, withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { IStyles } from \"../model\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    footer: {\n      position: \"fixed\",\n      background: \"white\",\n      bottom: 0,\n      textAlign: \"center\",\n      width: \"100%\",\n      paddingBottom: theme.spacing.unit * 2\n    }\n  });\n\nclass Footer extends React.Component<IStyles, {}> {\n  public render() {\n    return (\n      <div className={this.props.classes.footer}>\n        <Typography variant=\"body1\">\n          Built with <a href=\"https://reactjs.org/\">React</a> by{\" \"}\n          <a href=\"https://my-portfolio-netlify\">Irena Popova</a>.{\" \"}\n          <a href=\"#\">\n            Source\n          </a>\n        </Typography>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Footer);\n","import * as React from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { createStyles, Theme, withStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport { IHeaderContainerProps } from \".\";\nimport { IStyles } from \"../../model\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create([\"width\", \"margin\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    menuButton: {\n      marginLeft: 12,\n      marginRight: 36\n    }\n  });\n\ninterface IProps extends IHeaderContainerProps, IStyles {}\nclass Header extends React.Component<IProps, {}> {\n  private handleDrawerToggle = () => {\n    this.props.toggleDrawer();\n  };\n\n  public render() {\n    const { classes } = this.props;\n\n    return (\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n            onClick={this.handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\">\n            To Do List\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Header);\n","import { IAction, IReduxStore } from \"../model/store\";\n\nimport C from \"../constants\";\n\nexport const initTaskList = () => {\n  return {\n    type: C.INIT_TASK_LIST,\n    payload: \"\"\n  };\n};\n\nexport const addTaskItem = (\n  task: string,\n  hasTaskDate: boolean,\n  taskDate: Date\n): IAction => {\n  return {\n    type: C.ADD_NEW_TASK,\n    payload: {\n      taskName: task,\n      hasDueDate: hasTaskDate,\n      dueDate: taskDate\n    }\n  };\n};\n\nexport const toggleTask = (id: string): IAction => {\n  return {\n    type: C.TOGGLE_TASK_STATUS,\n    payload: id\n  };\n};\n\nexport const removeTask = (id: string): IAction => {\n  return {\n    type: C.REMOVE_TASK,\n    payload: id\n  };\n};\n\nexport const updateDueDate = (itemId: string, newDate: Date): IAction => {\n  return {\n    type: C.UPDATE_TASK_DATE,\n    payload: { id: itemId, newValue: newDate }\n  };\n};\n\nexport const updateTask = (itemId: string, newText: string): IAction => {\n  return {\n    type: C.UPDATE_TASK_TEXT,\n    payload: { id: itemId, newValue: newText }\n  };\n};\n\nexport const loadStore = (list: IReduxStore) => {\n  return {\n    type: C.LOAD_STORE,\n    payload: list\n  };\n};\n\nexport const applyFilter = (filterName: string): IAction => {\n  return {\n    type: C.APPLY_FILTER,\n    payload: filterName\n  };\n};\n\nexport const toggleDrawer = (): IAction => {\n  return {\n    type: C.TOGGLE_DRAWER,\n    payload: null\n  };\n};\n","import Header from \"./Header\";\n\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport { toggleDrawer } from \"../../actions\";\nimport { IReduxStore } from \"../../model/store\";\n\ninterface IStoreProps {\n  isDrawerOpen: boolean;\n}\n\ninterface IHeaderDispatch {\n  toggleDrawer: () => void;\n}\n\nexport interface IHeaderContainerProps extends IStoreProps, IHeaderDispatch {}\n\nconst mapStoreToProps = (store: IReduxStore): IStoreProps => {\n  return {\n    isDrawerOpen: store.options.isDrawerOpen\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): IHeaderDispatch => ({\n  toggleDrawer: () => dispatch(toggleDrawer())\n});\n\nconst HeaderContainer = connect(\n  mapStoreToProps,\n  mapDispatchToProps\n)(Header);\n\nexport default HeaderContainer;\n","import { CalendarToday, Home } from \"@material-ui/icons\";\n\nimport { IMainMenuItem, IMenuItem } from \"../model\";\n\nconst MAIN_MENU: IMainMenuItem[] = [\n  { name: \"Home\", icon: Home, link: \"/\" },\n  { name: \"Calendar\", icon: CalendarToday, link: \"/calendar\" }\n];\nexport default MAIN_MENU;\n\nexport const FILTER_MENU: IMenuItem[] = [\n  {\n    label: \"All\",\n    value: \"all\"\n  },\n  {\n    label: \"Active\",\n    value: \"active\"\n  },\n  {\n    label: \"Completed\",\n    value: \"completed\"\n  }\n];\n","import * as React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\ninterface IProps {\n  name: string;\n  icon: React.ReactElement;\n  to: string;\n  replace?: boolean;\n}\n\nclass ListItemLink extends React.Component<IProps, {}> {\n  private renderLink = (itemProps: any) => (\n    <Link to={this.props.to} {...itemProps} />\n  );\n\n  public render() {\n    return (\n      <li>\n        <ListItem button={true} component={this.renderLink as any}>\n          <ListItemIcon>{this.props.icon}</ListItemIcon>\n          <ListItemText primary={this.props.name} />\n        </ListItem>\n      </li>\n    );\n  }\n}\n\nexport default ListItemLink;\n","import * as React from \"react\";\n\nimport classNames from \"classnames\";\n\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport { createStyles, Theme, withStyles } from \"@material-ui/core/styles\";\n\nimport { ISideDrawerContainerProps } from \".\";\nimport { STYLE_CONSTANTS } from \"../../constants\";\n\nimport MAIN_MENU from \"../../constants/menu\";\nimport ListItemLink from \"./ListItemLink\";\n\nconst drawerWidth = STYLE_CONSTANTS.drawerWidth;\n\ninterface IProps {\n  classes: any;\n  theme: Theme;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: \"nowrap\"\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    drawerClose: {\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      overflowX: \"hidden\",\n      width: 0,\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing.unit * 7 + 1\n      }\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: \"0 8px\",\n      ...theme.mixins.toolbar\n    }\n  });\n\nclass SideDrawer extends React.Component<\n  ISideDrawerContainerProps & IProps,\n  {}\n> {\n  public render() {\n    const { classes, isDrawerOpen } = this.props;\n    return (\n      <Drawer\n        variant=\"permanent\"\n        className={classNames(classes.drawer, {\n          [classes.drawerOpen]: isDrawerOpen,\n          [classes.drawerClose]: !isDrawerOpen\n        })}\n        classes={{\n          paper: classNames({\n            [classes.drawerOpen]: isDrawerOpen,\n            [classes.drawerClose]: !isDrawerOpen\n          })\n        }}\n        open={isDrawerOpen}\n      >\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n          {MAIN_MENU.map(menuItem => {\n            return (\n              <ListItemLink\n                key={menuItem.name}\n                name={menuItem.name}\n                icon={<menuItem.icon />}\n                to={menuItem.link}\n              />\n            );\n          })}\n        </List>\n        <Divider />\n      </Drawer>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(SideDrawer);\n","import SideDrawer from \"./SideDrawer\";\n\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport { toggleDrawer } from \"../../actions\";\nimport { IReduxStore } from \"../../model/store\";\n\ninterface IDispatchProps {\n  toggleDrawer: () => void;\n}\n\ninterface IStoreProps {\n  isDrawerOpen: boolean;\n}\n\nexport interface ISideDrawerContainerProps\n  extends IStoreProps,\n    IDispatchProps {}\n\nconst mapStoreToProps = (store: IReduxStore) => {\n  return {\n    isDrawerOpen: store.options.isDrawerOpen\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): IDispatchProps => ({\n  toggleDrawer: () => dispatch(toggleDrawer())\n});\n\nconst SideDrawerContainer = connect(\n  mapStoreToProps,\n  mapDispatchToProps\n)(SideDrawer);\n\nexport default SideDrawerContainer;\n","import * as React from \"react\";\n\nimport * as moment from \"moment\";\nimport BigCalendar from \"react-big-calendar\";\n\nimport { ICalendarProps } from \".\";\n\nconst localizer = BigCalendar.momentLocalizer(moment);\n\ninterface IProps {\n  selectedDate?: Date;\n}\n\nclass ToDoCalendar extends React.Component<ICalendarProps & IProps, {}> {\n  private onNavigate = () => {};\n\n  public render() {\n    return (\n      <BigCalendar\n        localizer={localizer}\n        events={this.props.eventsList}\n        defaultDate={new Date()}\n        onNavigate={this.onNavigate}\n        date={this.props.selectedDate}\n      />\n    );\n  }\n}\n\nexport default ToDoCalendar;\n","import { connect } from \"react-redux\";\n\nimport Calendar from \"./Calendar\";\n\nimport { Event } from \"react-big-calendar\";\nimport { IReduxStore } from \"../../model/store\";\n\nexport interface ICalendarProps {\n  eventsList: Event[];\n}\n\nconst mapStateToProps = (store: IReduxStore): ICalendarProps => {\n  const list: Event[] = [];\n  Object.keys(store.toDoList).forEach(key => {\n    if (store.toDoList[key].hasDueDate) {\n      list.push({\n        title: store.toDoList[key].value,\n        start: store.toDoList[key].dueDate,\n        end: store.toDoList[key].dueDate,\n        allDay: false,\n        resource: store.toDoList[key].id\n      });\n    }\n  });\n\n  return {\n    eventsList: list\n  };\n};\n\nexport default connect(mapStateToProps)(Calendar);\n","import * as React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\ninterface IProps {\n  id: string;\n  date: string;\n  title: string;\n}\n\nclass CalendarListItem extends React.Component<IProps, {}> {\n  private renderLink = (itemProps: any) => (\n    <Link to={\"/calendar/\" + this.props.date} {...itemProps} />\n  );\n\n  public render() {\n    return (\n      <ListItem button={true} component={this.renderLink as any}>\n        <ListItemText primary={this.props.title} secondary={this.props.date} />\n      </ListItem>\n    );\n  }\n}\n\nexport default CalendarListItem;\n","import * as React from \"react\";\n\nimport moment from \"moment\";\n\nimport List from \"@material-ui/core/List\";\n\nimport { ICalendarProps } from \".\";\nimport CalendarListItem from \"./CalendarListItem\";\n\nclass CalendarList extends React.Component<ICalendarProps, {}> {\n  public render() {\n    return (\n      <List>\n        {this.props.tasksList.map(task => (\n          <CalendarListItem\n            key={task.id}\n            id={task.id}\n            title={task.value}\n            date={moment(task.dueDate).format(\"DD-MMM-YYYY\")}\n          />\n        ))}\n      </List>\n    );\n  }\n}\n\nexport default CalendarList;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport CalendarList from \"./CalendarList\";\n\n// import { Event } from \"react-big-calendar\";\nimport { IReduxStore, IToDoItem } from \"../../model/store\";\n\ninterface IStoreProps {\n  tasksList: IToDoItem[];\n}\n\ninterface IDispatchProps {\n  //   selectEvent: (date: Date) => void;\n}\n\nexport interface ICalendarProps extends IStoreProps, IDispatchProps {}\n\nconst mapStateToProps = (store: IReduxStore): IStoreProps => {\n  const list: IToDoItem[] = [];\n  Object.keys(store.toDoList).forEach(key => {\n    if (store.toDoList[key].hasDueDate) {\n      list.push(store.toDoList[key]);\n    }\n  });\n\n  return {\n    tasksList: list\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): IDispatchProps => ({\n  // selectDate: (value: Date) => dispatch(applyFilter(value))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CalendarList);\n","import * as React from \"react\";\n\nimport moment from \"moment\";\nimport { RouteComponentProps } from \"react-router\";\n\nimport CalendarContainer from \"../components/Calendar\";\nimport CalenarListContainer from \"../components/CalendarList\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\ninterface IState {\n  selectedDate: Date;\n}\n\ninterface IMatchParams {\n  date: string;\n}\n\ninterface IProps extends RouteComponentProps<IMatchParams> {}\n\nclass CalendarView extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.state = {\n      selectedDate: new Date()\n    };\n  }\n\n  public static getDerivedStateFromProps(props: IProps, state: IState): IState {\n    const date = props.match.params.date\n      ? moment(props.match.params.date, \"DD-MMM-YYYY\").toDate()\n      : state.selectedDate;\n\n    return {\n      selectedDate: date\n    };\n  }\n\n  public shouldComponentUpdate() {\n    return (\n      this.props.match.params.date !==\n      moment(this.state.selectedDate).format(\"DD-MMM-YYYY\")\n    );\n  }\n\n  public render() {\n    return (\n      <Paper style={{ flex: 1 }}>\n        <Grid container={true} style={{ height: \"100%\" }}>\n          <Grid item={true} md={true}>\n            <CalendarContainer selectedDate={this.state.selectedDate} />\n          </Grid>\n          <Grid item={true} md={4}>\n            <CalenarListContainer />\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default CalendarView;\n","export const formatDate = (date: Date | undefined) => {\n  if (date) {\n    return `${date.getFullYear()}-${date\n      .getMonth()\n      .toString()\n      .padStart(2, \"0\")}-${date.getDate()}`;\n  }\n};\n","import * as React from \"react\";\n\nimport { createStyles, Theme, withStyles } from \"@material-ui/core\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AddIcon from \"@material-ui/icons/AddCircle\";\n\nimport { IAddItemContainerProps } from \".\";\nimport { IStyles } from \"../../model\";\nimport { formatDate } from \"../../utils\";\n\ninterface IState {\n  newItemText: string;\n  hasDueDate: boolean;\n  dueDate: Date;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      padding: `${theme.spacing.unit}px ${theme.spacing.unit * 3}px`\n    }\n  });\n\nconst defualtState: IState = {\n  newItemText: \"\",\n  hasDueDate: false,\n  dueDate: new Date()\n};\n\nclass AddItemForm extends React.Component<\n  IAddItemContainerProps & IStyles,\n  IState\n> {\n  constructor(props: IAddItemContainerProps & IStyles) {\n    super(props);\n\n    this.state = { ...defualtState };\n  }\n\n  private checkForm = () => {\n    if (!this.state.newItemText) {\n      return false;\n    }\n    if (this.state.hasDueDate && this.state.dueDate === undefined) {\n      return false;\n    }\n\n    return true;\n  };\n\n  private handleSubmit = () => {\n    if (this.checkForm()) {\n      this.props.addTaskItem(\n        this.state.newItemText,\n        this.state.hasDueDate,\n        this.state.dueDate\n      );\n\n      this.setState({ ...defualtState });\n    }\n  };\n\n  private handleTextUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ newItemText: event.target.value });\n  };\n\n  private handleKeyPress = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    if (event.key === \"Enter\") {\n      this.handleSubmit();\n    }\n  };\n\n  private toggleDate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ hasDueDate: event.target.checked });\n  };\n\n  private handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ dueDate: new Date(event.target.value) });\n  };\n\n  public render() {\n    const { classes } = this.props;\n\n    return (\n      <Grid item={true} xs={12} className={classes.root}>\n        <Grid container={true} alignItems=\"center\" spacing={16}>\n          <Grid item={true} md={true} xs={12}>\n            <TextField\n              label=\"Enter New Item\"\n              className={\"add-task-input\"}\n              onChange={this.handleTextUpdate}\n              onKeyPress={this.handleKeyPress}\n              value={this.state.newItemText}\n            />\n          </Grid>\n          <Grid className={classes.centerItem} item={true} md={2} xs={4}>\n            <FormControlLabel\n              value=\"top\"\n              control={\n                <Checkbox\n                  onChange={this.toggleDate}\n                  checked={this.state.hasDueDate}\n                />\n              }\n              label=\"Due Date?\"\n              labelPlacement=\"top\"\n            />\n          </Grid>\n          <Grid item={true} md={2} xs={6}>\n            <TextField\n              label=\"Due Date\"\n              type=\"date\"\n              disabled={!this.state.hasDueDate}\n              onChange={this.handleDateChange}\n              defaultValue={formatDate(this.state.dueDate)}\n              InputLabelProps={{ shrink: true }}\n            />\n          </Grid>\n          <Grid item={true} md={1} xs={1} className=\"center-horizontal\">\n            <IconButton aria-label=\"Add\" onClick={this.handleSubmit}>\n              <AddIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(AddItemForm);\n","import AddItemForm from \"./AddItemForm\";\n\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport { addTaskItem } from \"../../actions\";\n\nexport interface IAddItemContainerProps {\n  addTaskItem: (taskName: string, hasDueDate: boolean, dueDate: Date) => void;\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): IAddItemContainerProps => ({\n  addTaskItem: (taskName: string, hasDueDate: boolean, dueDate: Date) =>\n    dispatch(addTaskItem(taskName, hasDueDate, dueDate))\n});\n\nconst AddItemContainer = connect(\n  null,\n  mapDispatchToProps\n)(AddItemForm);\n\nexport default AddItemContainer;\n","import * as React from \"react\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\ninterface IProps {\n  value: string;\n  label: string;\n  handleClick: (value: string) => void;\n}\n\nclass FilterMenuItem extends React.Component<IProps, {}> {\n  private handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    this.props.handleClick(this.props.value);\n  };\n\n  public render() {\n    const { value, label } = this.props;\n\n    return (\n      <MenuItem value={value} onClick={this.handleClick} >\n        {label}\n      </MenuItem>\n    );\n  }\n}\n\nexport default FilterMenuItem;\n","import * as React from \"react\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { FilterList } from \"@material-ui/icons\";\n\nimport { IFilterContainerProps } from \".\";\nimport { FILTER_MENU } from \"../../constants/menu\";\nimport FilterMenuItem from \"./FilterMenuItem\";\n\ninterface IState {\n  showFilterMenu: boolean;\n  anchorEl: null | HTMLElement;\n}\n\nclass FilterMenu extends React.Component<IFilterContainerProps, IState> {\n  constructor(props: IFilterContainerProps) {\n    super(props);\n    this.state = {\n      anchorEl: null,\n      showFilterMenu: false\n    };\n  }\n\n  private handleItemClick = (value: string) => {\n    this.handleMenuClose();\n    this.props.applyFilter(value);\n  };\n\n  private handleOpenMenu = (event: React.MouseEvent<HTMLElement>) => {\n    event.persist();\n    this.setState({\n      anchorEl: event.currentTarget,\n      showFilterMenu: true\n    });\n  };\n\n  private handleMenuClose = () => {\n    this.setState({ anchorEl: null, showFilterMenu: false });\n  };\n\n  public render() {\n    return (\n      <div>\n        <IconButton\n          onClick={this.handleOpenMenu}\n          className=\"filter-button\"\n          aria-label=\"Filter\"\n          aria-owns={this.state.anchorEl ? \"filter-menu\" : undefined}\n          aria-haspopup=\"true\"\n        >\n          <FilterList />\n        </IconButton>\n        <Menu\n          open={this.state.showFilterMenu}\n          onClose={this.handleMenuClose}\n          anchorEl={this.state.anchorEl}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"right\"\n          }}\n        >\n          {FILTER_MENU.map(item => {\n            return (\n              <FilterMenuItem\n                key={item.value}\n                value={item.value}\n                label={item.label}\n                handleClick={this.handleItemClick}\n              />\n            );\n          })}\n        </Menu>\n      </div>\n    );\n  }\n}\n\nexport default FilterMenu;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { applyFilter } from \"../../actions\";\n\nimport { IReduxStore } from \"../../model/store\";\nimport FilterMenu from \"./FilterMenu\";\n\ninterface IDispatchProps {\n  applyFilter: (value: string) => void;\n}\n\ninterface IStoreProps {\n  filterType: string;\n}\n\nexport interface IFilterContainerProps extends IStoreProps, IDispatchProps {}\n\nconst mapStateToProps = (store: IReduxStore): IStoreProps => {\n  return {\n    filterType: store.options.filterType\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): IDispatchProps => ({\n  applyFilter: (value: string) => dispatch(applyFilter(value))\n});\n\nconst FilterControlContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FilterMenu);\n\nexport default FilterControlContainer;\n","import * as React from \"react\";\n\nimport moment from \"moment\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n\nimport { ITaskProps } from \".\";\n\ninterface IProps {\n  id: string;\n  isCompleted: boolean;\n  value: string;\n  hasDueDate: boolean;\n  dueDate?: string;\n}\n\ninterface IStates {\n  isEditing: boolean;\n  newItem: string;\n  newDate?: Date;\n  hasDueDate: boolean;\n}\n\nclass ToDoItem extends React.Component<IProps & ITaskProps, IStates> {\n  constructor(props: IProps & ITaskProps) {\n    super(props);\n\n    if (this.props.hasDueDate && this.props.dueDate !== undefined) {\n      this.state = {\n        isEditing: false,\n        newItem: this.props.value,\n        hasDueDate: this.props.hasDueDate,\n        newDate: moment(this.props.dueDate).toDate()\n      };\n    } else {\n      this.state = {\n        isEditing: false,\n        newItem: this.props.value,\n        hasDueDate: this.props.hasDueDate\n      };\n    }\n  }\n\n  private onTextUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ newItem: event.target.value });\n  };\n\n  private toggleStatus = () => {\n    this.props.toggleTask(this.props.id);\n  };\n\n  private updateTask = () => {\n    this.setState({ isEditing: false }, () => {\n      this.props.updateTask(this.props.id, this.state.newItem);\n    });\n  };\n\n  private toggleDate = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ hasDueDate: event.target.checked });\n  };\n\n  private handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ newDate: new Date(event.target.value) });\n  };\n\n  private handleKeyPress = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    if (event.key === \"Enter\") {\n      this.updateTask();\n    }\n  };\n\n  private removeTask = () => {\n    this.props.removeTask(this.props.id);\n  };\n\n  private toggleEdit = () => {\n    this.setState({ isEditing: true });\n  };\n\n  private renderForm = () => {\n    return (\n      <TableRow>\n        <TableCell colSpan={5}>\n          <Grid container={true} spacing={16} alignItems=\"center\" className=\"edit-row\">\n            <Grid item={true} md={7} xs={12}>\n              <TextField\n                style={{ width: \"100%\" }}\n                label=\"Task Name\"\n                onChange={this.onTextUpdate}\n                value={this.state.newItem}\n                onKeyDown={this.handleKeyPress}\n              />\n            </Grid>\n            <Grid item={true} md={2} xs={4} className=\"flex-center\">\n              <FormControlLabel\n                value=\"top\"\n                control={\n                  <Checkbox\n                    onChange={this.toggleDate}\n                    checked={this.state.hasDueDate}\n                  />\n                }\n                label=\"Due Date?\"\n                labelPlacement=\"top\"\n              />\n            </Grid>\n            <Grid item={true} md={2} xs={4} className=\"flex-center\">\n              <TextField\n                label=\"Due Date\"\n                type=\"date\"\n                defaultValue={moment(this.state.newDate).format(\"YYYY-MM-DD\")}\n                InputLabelProps={{ shrink: true }}\n                onChange={this.handleDateChange}\n              />\n            </Grid>\n            <Grid item={true} sm={1} xs={4} className=\"flex-center\">\n              <IconButton aria-label=\"Save\" onClick={this.updateTask}>\n                <SaveIcon />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </TableCell>\n      </TableRow>\n    );\n  };\n\n  private renderItem = () => {\n    const itemClass = this.props.isCompleted ? \"completed\" : \"active\";\n    return (\n      <TableRow className={itemClass}>\n        <TableCell className=\"icon\">\n          <Checkbox\n            onClick={this.toggleStatus}\n            checked={this.props.isCompleted}\n          />\n        </TableCell>\n        <TableCell>{this.props.value}</TableCell>\n        <TableCell>\n          {this.props.hasDueDate && this.props.dueDate\n            ? moment(this.props.dueDate).format(\"DD-MMM-YYYY\")\n            : \"-\"}\n        </TableCell>\n        <TableCell className=\"icon\">\n          <IconButton aria-label=\"Edit\" onClick={this.toggleEdit}>\n            <EditIcon />\n          </IconButton>\n        </TableCell>\n        <TableCell className=\"icon\">\n          <IconButton aria-label=\"Delete\" onClick={this.removeTask}>\n            <DeleteIcon />\n          </IconButton>\n        </TableCell>\n      </TableRow>\n    );\n  };\n\n  public render() {\n    return this.state.isEditing ? this.renderForm() : this.renderItem();\n  }\n}\n\nexport default ToDoItem;\n","import Task from \"./Task\";\n\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { removeTask, toggleTask, updateTask } from \"../../actions\";\n\nexport interface ITaskProps {\n  toggleTask: (id: string) => void;\n  removeTask: (id: string) => void;\n  updateTask: (id: string, newValue: string) => void;\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): ITaskProps => {\n  return {\n    toggleTask: (id: string) => dispatch(toggleTask(id)),\n    removeTask: (id: string) => dispatch(removeTask(id)),\n    updateTask: (id: string, newValue: string) =>\n      dispatch(updateTask(id, newValue))\n  };\n};\n\nconst TaskContainer = connect(\n  null,\n  mapDispatchToProps\n)(Task);\n\nexport default TaskContainer;\n","import * as React from \"react\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport { IToDoListProps } from \".\";\nimport TaskItem from \"../Task\";\n\nclass ToDoList extends React.Component<IToDoListProps, {}> {\n  public render() {\n    return (\n      <Table className=\"task-list\">\n        <TableHead>\n          <TableRow className=\"task-list-header\">\n            <TableCell  align=\"center\">Status</TableCell>\n            <TableCell>Task Name</TableCell>\n            <TableCell>Due Date</TableCell>\n            <TableCell colSpan={2} />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {this.props.toDoList.map((item, index) => {\n            return (\n              <TaskItem\n                key={index}\n                id={item.id}\n                isCompleted={item.isCompleted}\n                hasDueDate={item.hasDueDate}\n                dueDate={item.dueDate}\n                value={item.value}\n              />\n            );\n          })}\n        </TableBody>\n      </Table>\n    );\n  }\n}\n\nexport default ToDoList;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport { initTaskList } from \"../../actions\";\nimport TaskList from \"./TaskList\";\n\nimport { IReduxStore, IToDoItem } from \"../../model/store\";\n\nexport interface IToDoListProps {\n  toDoList: IToDoItem[];\n  filterType: string;\n}\n\nconst mapStateToProps = (store: IReduxStore): IToDoListProps => {\n  const list = Object.keys(store.toDoList)\n    .map(key => store.toDoList[key])\n    .filter(item => {\n      if (store.options.filterType === \"all\") {\n        return true;\n      } else if (store.options.filterType === \"active\") {\n        return !item.isCompleted;\n      } else if (store.options.filterType === \"completed\") {\n        return item.isCompleted;\n      }\n\n      return false;\n    });\n\n  return {\n    toDoList: list,\n    filterType: store.options.filterType\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  initTaskList: () => dispatch(initTaskList())\n});\n\nconst TaskListContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TaskList);\n\nexport default TaskListContainer;\n","import * as React from \"react\";\n\nimport classNames from \"classnames\";\n\nimport AddItemFormContainer from \"../components/AddItemForm\";\nimport FilterControlContainer from \"../components/FilterMenu\";\nimport TaskListContainer from \"../components/TaskList\";\n\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles\n} from \"@material-ui/core/styles\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { AddCircle } from \"@material-ui/icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flex: 1\n    },\n    button: {\n      margin: theme.spacing.unit,\n      width: 200\n    },\n    rightIcon: {\n      transition: \"transform 0.5s\",\n      marginLeft: theme.spacing.unit\n    },\n    filler: {\n      flex: 1\n    },\n    formVisible: {\n      transform: \"rotate(45deg)\"\n    },\n    collapse: {\n      width: \"100%\"\n    }\n  });\n\ninterface IProps extends WithStyles<typeof styles> {}\n\ninterface IState {\n  showAddNewItem: boolean;\n}\n\nclass HomeView extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      showAddNewItem: false\n    };\n  }\n\n  private handelAddButton = () => {\n    this.setState((prevState: IState) => {\n      return {\n        showAddNewItem: !prevState.showAddNewItem\n      };\n    });\n  };\n\n  public render() {\n    const { classes } = this.props;\n    const isFormVisible = this.state.showAddNewItem;\n\n    return (\n      <Paper className={classes.root}>\n        <Grid container={true} alignItems=\"stretch\">\n          <Grid item={true} xs={12}>\n            <Toolbar className={classes.filler}>\n              <Button\n                variant=\"contained\"\n                onClick={this.handelAddButton}\n                color={\"primary\"}\n                className={classes.button}\n              >\n                {isFormVisible ? \"Close\" : \"Add New Item\"}\n                <AddCircle\n                  className={classNames(classes.rightIcon, {\n                    [classes.formVisible]: isFormVisible\n                  })}\n                />\n              </Button>\n              <div className={classes.filler} />\n              <FilterControlContainer />\n            </Toolbar>\n          </Grid>\n          <Divider style={{ width: \"100%\" }} />\n          <Collapse in={isFormVisible} className={classes.collapse}>\n            <AddItemFormContainer />\n            <Divider />\n          </Collapse>\n          <Grid item={true} xs={12} className={`list-container`}>\n            <TaskListContainer />\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default withStyles(styles)(HomeView);\n","import * as React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createStyles, Theme, withStyles } from \"@material-ui/core/styles\";\n\nimport Footer from \"./components/Footer\";\nimport HeaderContainer from \"./components/Header\";\nimport SideDrawerContainer from \"./components/SideDrawer\";\nimport CalendarView from \"./views/CalendarView\";\nimport HomeView from \"./views/HomeView\";\n\nimport { loadStore } from \"./actions\";\nimport { IStyles } from \"./model\";\nimport { IReduxStore } from \"./model/store\";\n\ninterface IAppDispatch {\n  loadStore: (store: IReduxStore) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing.unit * 3,\n      paddingBottom: theme.spacing.unit * 6,\n      display: \"flex\",\n      flexFlow: \"column\"\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: \"0 8px\",\n      ...theme.mixins.toolbar\n    }\n  });\n\nclass App extends React.Component<IStyles & IAppDispatch, {}> {\n  /**\n   * Get saved user data from cache\n   */\n  public componentDidMount() {\n    const persistedState = localStorage.getItem(\"reduxState\")\n      ? JSON.parse(localStorage.getItem(\"reduxState\") || \"\")\n      : {};\n    if (persistedState != null) {\n      this.props.loadStore(persistedState);\n    }\n  }\n\n  public render() {\n    const { classes } = this.props;\n    return (\n      <div className=\"app-root\">\n        <CssBaseline />\n        <HeaderContainer />\n        <SideDrawerContainer />\n        <div className={classes.content}>\n          <div className={classes.toolbar} />\n          <Switch>\n            <Route exact={true} path=\"/\" component={HomeView} />\n            <Route path={`/calendar/:date?`} component={CalendarView} />\n          </Switch>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch: Dispatch): IAppDispatch => ({\n  loadStore: (store: IReduxStore) => dispatch(loadStore(store))\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  connect(\n    null,\n    mapDispatchToProps\n  )(App)\n);\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { store } from \"./reducers\";\n\nimport App from \"./App\";\n\nimport \"typeface-roboto\";\nimport \"./styles/index.scss\";\n\nstore.subscribe(() => {\n  localStorage.setItem(\"reduxState\", JSON.stringify(store.getState()));\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\") as HTMLElement\n);\n"],"sourceRoot":""}